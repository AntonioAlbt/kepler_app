# This is a basic workflow to help you get started with Actions
name: Flutter Analyze and Build CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - 'lernsax_data/**'
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      releaseTag:
        description: "if set, create a new release from the build with this tag"
        required: false
        type: string
      beta:
        description: "if the build should be a beta build"
        required: true
        type: boolean
        default: false
      debugFeatures:
        description: "if the build should have debug features enabled"
        required: true
        type: boolean
        default: false
      sentry:
        description: "if the build should have sentry (able to be) enabled"
        required: true
        type: boolean
        default: false
      debugNotifyData:
        description: "if the build should have notifications debug data added - will spam notifications every 2 hours"
        required: true
        type: boolean
        default: false

  # A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: flutter build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.5'
      - run: flutter pub get
      - run: |
          cp lib/libs/sentry_dsn.example.dart lib/libs/sentry_dsn.dart
          sed -i "s|https://_@_.ingest.sentry.io/_|$SENTRY_DSN|g" lib/libs/sentry_dsn.dart
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        name: Setup Sentry
      - run: |
          cp android/app/signing/key.properties.example android/app/signing/key.properties
          sed -i "s|<storepassword>|$STPW|g" android/app/signing/key.properties
          sed -i "s|<keypassword>|$KPW|g" android/app/signing/key.properties
          sed -i "s|<keyalias>|$KA|g" android/app/signing/key.properties
          sed -i "s|<filepath>|$FP|g" android/app/signing/key.properties
          printf "$STDATA" | base64 -d > android/app/$FP
        env:
          STDATA: ${{ secrets.KEYSTORE_CONTENT_BASE64 }}
          STPW: ${{ secrets.KEYSTORE_PASSWORD }}
          KPW: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KA: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          FP: "signing/keystore.jks"
        name: Setup APK signing
      - run: flutter analyze
      - run: flutter build apk --release --dart-define=beta=$BETA --dart-define=debug_features=$DEBUG --dart-define=sentry_enabled=$SENTRY --dart-define=debug_notif_data=$DEBUGNOTIF
        env:
          BETA: ${{ github.event.inputs.beta }}
          DEBUG: ${{ github.event.inputs.debugFeatures }}
          SENTRY: ${{ github.event.inputs.sentry }}
          DEBUGNOTIF: ${{ github.event.inputs.debugNotifyData }}
        if: ${{ github.event.action == 'workflow_dispatch' }}
      - run: flutter build apk --release --dart-define=beta=true
        if: ${{ github.event.action != 'workflow_dispatch' }}
      - name: Publish new release
        uses: softprops/action-gh-release@v1
        if: ${{ github.event.inputs.releaseTag != '' }}
        with:
          files: "build/app/outputs/flutter-apk/app-release.apk"
          prerelease: ${{ github.event.inputs.beta || github.event.inputs.debugFeatures }}
          tag_name: ${{ github.event.inputs.releaseTag }}
      - uses: actions/upload-artifact@v3
        with:
          name: ReleaseBetaAPK
          path: "build/app/outputs/flutter-apk/app-release.apk"
          retention-days: 14
